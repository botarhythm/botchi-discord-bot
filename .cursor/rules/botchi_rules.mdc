---
description: 
globs: 
alwaysApply: false
---
# ボッチ - ルール設定ドキュメント

## 概要
このドキュメントでは、ボッチの動作を制御する各種ルールについて説明します。ルールは4つの主要カテゴリに分類され、それぞれが特定の機能領域を管理します。

## ルールカテゴリ

### 1. 基本設定 (BASE)
基本的な動作パラメータを制御します。

| ルール名 | 値 | 説明 |
|----------|-----|------|
| maxResponseLength | 2000 | 応答の最大文字数 |
| defaultLanguage | 'ja' | デフォルトの使用言語 |
| timeoutSeconds | 30 | 処理のタイムアウト時間（秒） |

### 2. 会話ルール (CONVERSATION)
会話の流れと制限を管理します。

| ルール名 | 値 | 説明 |
|----------|-----|------|
| maxTurns | 10 | 1セッションでの最大会話ターン数 |
| minMessageLength | 2 | メッセージの最小文字数 |
| maxMessageLength | 1000 | メッセージの最大文字数 |
| cooldownSeconds | 1 | メッセージ間の待機時間（秒） |

### 3. 制限ルール (LIMITATIONS)
システムリソースと使用制限を管理します。

| ルール名 | 値 | 説明 |
|----------|-----|------|
| maxDailyMessages | 100 | 1日あたりの最大メッセージ数 |
| maxConcurrentSessions | 3 | 同時に処理可能なセッション数 |
| maxAttachmentSize | 5MB | 添付ファイルの最大サイズ |

### 4. カスタマイズルール (CUSTOMIZATION)
表示と機能のカスタマイズオプションを制御します。

| ルール名 | 値 | 説明 |
|----------|-----|------|
| allowedEmojis | true | 絵文字の使用可否 |
| allowedMarkdown | true | Markdown記法の使用可否 |
| allowedHtml | false | HTML記法の使用可否 |

## ルールの使用方法

### ルールの取得
```javascript
const { getRule } = require('../config/rules');

// 例: 最大メッセージ長を取得
const maxLength = getRule('CONVERSATION', 'maxMessageLength');
```

### ルールの検証
```javascript
const { validateRule } = require('../config/rules');

// 例: メッセージ長が制限内かチェック
const messageLength = 500;
const isValid = validateRule('CONVERSATION', 'maxMessageLength', messageLength);
```

## エラー処理
- 存在しないカテゴリやルールにアクセスした場合、エラーがスローされます
- 数値型ルールの場合、指定された値が上限以下かどうかを検証します
- 真偽値型ルールの場合、常にtrueを返します（設定値の確認のみ）

## 注意事項
1. ルールの値は実行時に変更できません
2. 環境変数による上書きが必要な場合は、個別に実装が必要です
3. 新しいルールを追加する場合は、`config/rules.js`を編集してください

# デプロイ前チェックリスト・運用ナレッジ

## 1. ローカルテストの完了
- すべての主要テストがパスしていることを確認
- Google検索API（CSE）も本番キーで正常動作することを確認
- `.env` などの環境変数が正しく設定されていること

## 2. 検索ロジックの最終仕様
- 検索APIの利用は「ニュース・最新情報」や「明示的な検索指示」のみ
- 検索結果を使ったAI応答時は、必ずリスト形式で参考URLを表示

## 3. デプロイ前の最終確認
- 本番用APIキー・CSE IDの管理徹底（漏洩防止）
- 本番環境の`.env`や設定ファイルが最新であること
- 依存パッケージやビルド手順に漏れがないか
- READMEや運用ドキュメントも最新化

## 4. デプロイ後の運用
- 初回デプロイ後はログを細かく監視
- 問題発生時はロールバック手順を用意 